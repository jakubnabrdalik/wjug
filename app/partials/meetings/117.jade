div
    .section(page='1')
        .centered
            .container
                .row
                    .span12
                        h4 117 spotkanie WJUGa
                        h2 Type Driven Development
                        p Prowadzi: Maciej Próchniak
                        p Termin: 4.06.2013 godz. 18:00
                        p Lokalizacja: MIMUW,
                        p Plakat: 
                            a(href="https://docs.google.com/file/d/0B8d787eZJXI_M3VkZW9BSEV6QWs/edit?usp=sharing") w PDF.
                        p Rejestracja na meetupie: 
                            a(href="http://www.meetup.com/Warszawa-Java-User-Group-Warszawa-JUG/", target='_blank')  Meetup
                        h3 O prezentacji:
                        p Każdy chyba wie (a przynajmniej powinien wiedzieć) o co chodzi w Test Driven Development.
                        p W językach z odpowiednio silnym systemem typów - takich jak Scala lub Haskell da się osiągnąć coś jeszcze. Kompilator może wykonywać część testów za nas. Często można usłyszeć argumenty w stylu: "nie jestem w stanie wymyślić żadnych sensownych bugów, które mogą być wykryte przez kompilator".
                        p Chciałbym przedstawić kilka przykładów w Scali które (mam nadzieję) pokażą że to stwierdzenie nie jest prawdą - zaczynając od najprostszych, takich jak unikanie NullPointerException, a kończąc na eksperymentalnych próbach definiowania dość złożonych kontraktów jakie możemy znaleźć w takich biblitotekach jak Scalaz i Shapeless.
                        p Będę zakładał że słuchacze znają przynajmniej pobieżnie składnię Scali.
                        h3 O prelegencie:
                        p Dawno temu byłem topologiem algebraicznym, zmagającym się z homotopijnymi granicami odwrotnymi kontrawariantych funktorów kohomologii grup (chyba tak to jakoś szło...)
                        p Potem zacząłem pracowę w TouK przy różnych większych i mniejszych projektach SOA i okazało się że Drools, Servicemix, OSGI, Camel czy Activiti też mogą być zabawne.
                        p W międzyczasie nie gardzę także frontendem - poczynając od GWT, poprzez Grailsy a kończąc na czystym Javascripcie. Cały czas mozolnie starałem testować się to co się da testować - a także tego czego 'sięnieda'.
                        p Teraz powoli następuje powrót do korzeni - czyli programowanie funkcyjne w stylu ML. W świecie Javy Scala wydaje się nalepszą drogą do tego.
                        p Last but not least od czterech lat dumny tata ;)
