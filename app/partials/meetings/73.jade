div
    .section(page='1')
        .centered
            .container
                .row
                    .span12
                        h4 73 spotkanie WJUGa
                        h2 O obiektach aktywnych, obcym wołaniu metod takich obiektów i problemie otwartym?
                        h3 
                            a(href='http://www.mimuw.edu.pl/~salwicki/', target="_blank") prof. dr hab. Andrzej Salwicki
                        p Termin: 07.12.2010 godz. 18:00
                        p Lokalizacja: MIMUW, sala 5440
                        strong Dyskusja 
                            a(href='https://groups.google.com/forum/#!topic/warszawa-jug/EzYKsF7zFuE', target='_blank') dyskusja
                        h3 O prezentacji:
                        p 
                        | Podczas prezentacji omówię obiekty aktywne (rodzaj wątków) i oryginalną, obiektową koncepcję komunikacji/synchronizacji obiektów aktywnych zaproponowaną przez Bolka Ciesielskiego w 1988. Metody obiektu aktywnego mogą dynamicznie zmieniać swój status:
                        p 
                        | prywatny -> publiczny -> prywatny -> publiczny -> ...
                        p ------ enable m --- disable m ----- ....
                        p Wywołanie z obiektu Y metody m w obiekcie X wygląda zwyczajnie (*call*) X.m(...). Różnice sprowadzają się do kilku punktów:
                        ul
                            li chociaż obiekt aktywny Y wywołuje metodę m w obiekcie X, to obiekt X ma ją wykonać,
                            li aby mogło do tego dojść, metoda m obiektu X musi być publiczna (ang. enabled),
                            li takie obce wołanie metody może być zrealizowane w sposób synchroniczny, spotkanie instrukcji wywołania (w Y) z instrukcją accept (w X), lub w sposób asynchroniczny (wywołanie metody PRZERYWA wykonywanie wątku X'a - X wykonuje metodę m - i wraca do dalszego ciągu swego wątku).
                        p  Odczyt przedstawi szczegóły i omówi zalety takiego rozwiazania. Pomysł ten jest wykonalny (sprawdzono w Loglanie'82).
                        p  Na zakończenie przedstawimy interfejs AO (obiekt aktywny) i sformułujemy wyzwanie: zaimplementować ten interfejs w Javie lub udowodnić, że nie mozna tego zrobić bez modyfikacji JVM. Za rozwiązanie problemu przysługuje nagroda!
